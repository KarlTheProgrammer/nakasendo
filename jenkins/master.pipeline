/*
  Pipeline setting to trigger build on pushed to master
  see :
    https://jenkins.io/doc/pipeline/tour/hello-world/
*/
pipeline {
  agent any
  options { disableConcurrentBuilds() }

  /**  Set the build trigger filter using Bitbucket Push And Pull Request Plugin on Created/Updated. To make it work, it need to be 'build now' manually for a first time */
  triggers {
    bitBucketTrigger([
      [$class: 'BitBucketPPRRepositoryTriggerFilter' , actionFilter: [$class: 'BitBucketPPRRepositoryPushActionFilter', allowedBranches: '', triggerAlsoIfTagPush: false]]
      /*,[$class: 'BitBucketPPRPullRequestTriggerFilter', actionFilter: [$class: 'BitBucketPPRPullRequestMergedActionFilter']]*/
    ])
  }

  stages {
    stage('Environment variable on jenkins master'){
      agent any
      steps {
        sh 'printenv'
      }
    }

    // Build on Windows -----------------------------------------------------
    stage('Win Build'){
      agent { label 'slave_vm_win10pro_x64_mvsc2017' }
      environment {
        WINDOWS_BUILD_DIR="${env.WORKSPACE+'\\build'}"
        POSTBUILD_DIR="${env.WORKSPACE+'\\postbuild'}"
        TESTRESULT_RELEASE_DIR="${env.WINDOWS_BUILD_DIR+'\\x64\\release'}"
        TESTRESULT_DEBUG_DIR="${env.WINDOWS_BUILD_DIR+'\\x64\\debug'}"
        TESTRESULT_JUNIT_DIR="${env.WORKSPACE+'\\testresult\\junit'}"
        TESTRESULT_HTML_DIR="${env.WORKSPACE+'\\testresult\\html'}"

      }
      steps {
        bat 'set'

        // Merge pull request -------------------------------------------
        step([$class: 'WsCleanup'])
        checkout scm
        bat 'git checkout master'
        bat 'git log -5'

        /*
        // Build Release/Debug -------------------------------------------
        bat 'mkdir %WINDOWS_BUILD_DIR%'
        bat 'cd %WINDOWS_BUILD_DIR%'
        bat 'cmake %WORKSPACE% -G"Visual Studio 15 2017" -A x64'
        bat 'cmake --build . --target ALL_BUILD --config Debug'
        bat 'cmake --build . --target ALL_BUILD --config Release'

        // Test Release/Debug -------------------------------------------
        bat 'ctest --output-on-failure -C Release'
        bat 'ctest --output-on-failure -C Debug'

        // Aggregate post build/test results -------------------------------------------
        bat 'python jenkins/Chainkins.py --consolidate_junit --indir_debug=%TESTRESULT_DEBUG_DIR% --indir_release=%TESTRESULT_RELEASE_DIR% --outdir=%TESTRESULT_JUNIT_DIR%'
        bat 'python jenkins/Chainkins.py --consolidate_html --indir_debug=%TESTRESULT_DEBUG_DIR% --indir_release=%TESTRESULT_RELEASE_DIR% --outdir=%TESTRESULT_HTML_DIR%'
        */
      }
    }

    // Build on Linux -----------------------------------------------------
    stage('Linux build'){
      agent { label 'slave_vm_Ubuntu18_x64_gcc730'}
      environment {
        LINUX_RELEASE_BUILD_DIR="${env.WORKSPACE+'/buildrelease'}"
        LINUX_DEBUG_BUILD_DIR="${env.WORKSPACE+'/builddebug'}"
        POSTBUILD_DIR="${env.WORKSPACE+'/postbuild'}"
        TESTRESULT_RELEASE_DIR="${env.LINUX_RELEASE_BUILD_DIR+'/x64/release'}"
        TESTRESULT_DEBUG_DIR="${env.LINUX_DEBUG_BUILD_DIR+'/x64/debug'}"
        TESTRESULT_JUNIT_DIR="${env.WORKSPACE+'/testresult/junit'}"
        TESTRESULT_HTML_DIR="${env.WORKSPACE+'/testresult/html'}"
      }
      steps {
        sh 'printenv'
        // Merge pull request -------------------------------------------
        step([$class: 'WsCleanup'])
        checkout scm
        sh 'git checkout master'
        sh 'git log -5'
        /*
        // Build Release/Debug -------------------------------------------
        sh 'mkdir $LINUX_RELEASE_BUILD_DIR'
        sh 'mkdir $LINUX_DEBUG_BUILD_DIR'
        sh 'cd $LINUX_RELEASE_BUILD_DIR ; cmake .. ; make -j4 ;'
        sh 'cd $LINUX_DEBUG_BUILD_DIR   ; cmake .. ; make -j4 ;'

        // Test Release/Debug -------------------------------------------
        sh 'cd $LINUX_RELEASE_BUILD_DIR ; ctest --output-on-failure ;'
        sh 'cd $LINUX_DEBUG_BUILD_DIR   ; ctest --output-on-failure ;'

        // Aggregate post build/test results -------------------------------------------
        sh 'python jenkins/Chainkins.py --consolidate_junit --indir_debug=$TESTRESULT_DEBUG_DIR --indir_release=$TESTRESULT_RELEASE_DIR --outdir=$TESTRESULT_JUNIT_DIR'
        sh 'python jenkins/Chainkins.py --consolidate_html --indir_debug=$TESTRESULT_DEBUG_DIR --indir_release=$TESTRESULT_RELEASE_DIR --outdir=$TESTRESULT_HTML_DIR'
         */
      }
    }
  }
}