# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ts_messages_pb2 as ts__messages__pb2


class TSServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CallRegister = channel.unary_unary(
        '/ts_messaging.TSService/CallRegister',
        request_serializer=ts__messages__pb2.RegisterRequest.SerializeToString,
        response_deserializer=ts__messages__pb2.RegisterReply.FromString,
        )
    self.CallCreateGroup = channel.unary_unary(
        '/ts_messaging.TSService/CallCreateGroup',
        request_serializer=ts__messages__pb2.CreateGroupRequest.SerializeToString,
        response_deserializer=ts__messages__pb2.CreateGroupReply.FromString,
        )
    self.CallInvite = channel.unary_unary(
        '/ts_messaging.TSService/CallInvite',
        request_serializer=ts__messages__pb2.InviteRequest.SerializeToString,
        response_deserializer=ts__messages__pb2.InviteReply.FromString,
        )


class TSServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CallRegister(self, request, context):
    """Register
    rpc RegisterClient ( Register ) {}

    Create a group
    rpc CreateGroup ( )
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CallCreateGroup(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CallInvite(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TSServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CallRegister': grpc.unary_unary_rpc_method_handler(
          servicer.CallRegister,
          request_deserializer=ts__messages__pb2.RegisterRequest.FromString,
          response_serializer=ts__messages__pb2.RegisterReply.SerializeToString,
      ),
      'CallCreateGroup': grpc.unary_unary_rpc_method_handler(
          servicer.CallCreateGroup,
          request_deserializer=ts__messages__pb2.CreateGroupRequest.FromString,
          response_serializer=ts__messages__pb2.CreateGroupReply.SerializeToString,
      ),
      'CallInvite': grpc.unary_unary_rpc_method_handler(
          servicer.CallInvite,
          request_deserializer=ts__messages__pb2.InviteRequest.FromString,
          response_serializer=ts__messages__pb2.InviteReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ts_messaging.TSService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
